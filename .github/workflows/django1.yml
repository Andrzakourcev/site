name: Django CI with Vault

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Vault
        uses: hashicorp/vault-action@v3
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}

      - name: Retrieve SECRET_KEY from Vault
        id: secret_key
        run: |
          export SECRET_KEY=$(vault kv get -field=SECRET_KEY secret/django)
          echo "SECRET_KEY=$SECRET_KEY" >> $GITHUB_ENV
        env:
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}

  install_dependencies:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install Python dependencies globally
        run: |
          python -m pip install --upgrade pip  # Обновляем pip
          pip install -r sitetest/requirements.txt  # Устанавливаем зависимости из requirements.txt

  lint:
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install flake8 for linting
        run: |
          python -m pip install flake8
          flake8 sitetest/ --max-line-length=88

  run_tests:
    runs-on: ubuntu-latest
    needs: [install_dependencies, lint]  # Зависит от установленных зависимостей и линтинга
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Run Django tests
        run: |
          python sitetest/manage.py test  # Запуск тестов Django

  deploy:
    runs-on: ubuntu-latest
    needs: run_tests  # Деплой зависит от успешных тестов
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Deploy to production (placeholder)
        run: |
          echo "Deploying to production..."
          # Пример команды деплоя
          # ssh user@server 'bash deploy.sh'
        env:
          SECRET_KEY: ${{ env.SECRET_KEY }}  # Передаем SECRET_KEY для деплоя
